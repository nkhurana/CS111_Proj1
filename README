Neeraj Khurana (UID: 603795975)
Evan Shi (UID: 103802860)

CS 111 Lab 1a
Command builder for subset of standard POSIX

We are unaware of any known limitations of our code.

We tokenize the input commands and do syntax checking at a token level. We then
transform the tokens into the appropriate commands.

Lab 1b

There are no limitations on the execution of commands. Parallelization has yet 
to be implemented.

We made execute-command a recursive function that uses fork() and execvp(). We
used pipe() to handle pipe commands.

Lab 1c

We parallelized every top level command:
	1. We build dependencies in order of the commands for each of these cases
		1st command Read - 2nd Write
		1st Write - 2nd Read
		1st Write - 1st Write
	2. We first let loose all commands with no dependencies
	3. Whenever a command finishes (a child returns), we notify all its dependents
	4. When a dependent has no more dependencies, we run it immediately
	5. We stall main until all commands are run (all child processes return)